func prepareRecursive(files []FileInfo) (map[string][]FileInfo, []string) {
dircs := map[string][]FileInfo{}
var dircsKeys []string
for _, file := range files {
if strings.Contains(file.Path, "/") || file.FileInfo.IsDir() {
lastSlashIndx := strings.LastIndex(file.Path, "/")
if lastSlashIndx != -1 {
dir := file.Path[
]
if _, exists := dircs[dir]; !exists {
dircsKeys = append(dircsKeys, dir)
}
dircs[dir] = append(dircs[dir], file)
} else {
dirName := file.FileInfo.Name()
if _, exists := dircs[dirName]; !exists {
dircsKeys = append(dircsKeys, dirName)
}
dircs[dirName] = append(dircs[dirName], FileInfo{})
dircs["."] = append(dircs["."], file)
}
} else {
if _, exists := dircs["."]; !exists {
dircsKeys = append(dircsKeys, ".")
}
dircs["."] = append(dircs["."], file)
}
}

go
Copy code
// remove nil from non-empty folders
for k, v := range dircs {
	if len(v) > 1 {
		newSlice := []FileInfo{}
		for _, file := ra